<configuration debug="true">

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <!-- On Windows machines setting withJansi to true enables ANSI
         color code interpretation by the Jansi library. This requires
         org.fusesource.jansi:jansi:1.8 on the class path.  Note that
         Unix-based operating systems such as Linux and Mac OS X
         support ANSI color codes by default. -->
        <withJansi>true</withJansi>
        <!-- encoders are assigned the type
             ch.qos.logback.classic.encoder.PatternLayoutEncoder by default -->
        <encoder>
            <pattern>%date %highlight(%.-3level) %-16X{traceId} %-25logger{0} %msg%n %msg%n</pattern>
        </encoder>
    </appender>


    <!-- ===================================================== -->
    <!-- Secondary Appenders -->
    <!-- ===================================================== -->

    <!-- Service Log (Rollover every 50MB, max 11 logs) -->
    <appender name="SERVICE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.service.output:-service.log}</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <fileNamePattern>${log.service.output:-service.log}.%i</fileNamePattern>
            <minIndex>1</minIndex>
            <maxIndex>10</maxIndex>
        </rollingPolicy>
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <maxFileSize>50MB</maxFileSize>
        </triggeringPolicy>
        <encoder>
            <pattern>%date %.-3level %-16X{traceId} %-25logger{0} %msg%n</pattern>
        </encoder>
    </appender>

    <!-- Access Log (Rollover every 50MB, max 11 logs) -->
    <appender name="ACCESS" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.access.output:-access.log}</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <fileNamePattern>${log.access.output:-access.log}.%i</fileNamePattern>
            <minIndex>1</minIndex>
            <maxIndex>10</maxIndex>
        </rollingPolicy>
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <maxFileSize>50MB</maxFileSize>
        </triggeringPolicy>
        <encoder>
            <pattern>%msg %X{traceId}%n</pattern>
        </encoder>
    </appender>

    <!-- ===================================================== -->
    <!-- Primary Async Appenders -->
    <!-- ===================================================== -->

    <appender name="ASYNC-SERVICE" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="SERVICE"/>
    </appender>

    <appender name="ASYNC-ACCESS" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="ACCESS"/>
    </appender>

    <!-- ===================================================== -->
    <!-- Package Config -->
    <!-- ===================================================== -->

    <!-- Root Config -->
    <root level="DEBUG">
        <appender-ref ref="STDOUT"/>
        <!-- Re-enable for production -->
        <!-- <appender-ref ref="ASYNC-SERVICE"/> -->
    </root>

    <!-- Per-Package Config -->
    <logger name="com.twitter" level="info"/>

    <logger name="com.twitter.finatra.http.filters.AccessLoggingFilter"
            level="info"
            additivity="false">
        <appender-ref ref="ASYNC-ACCESS"/>
    </logger>

</configuration>